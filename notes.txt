1) we want to add to the redux store a new array/list that will contain all the calendar_ids that exist (that we got 
from /journal_entry/calendar_ids) ---- Decision is to fetch everything first (use get all route)

2) In App.js or Calendar.js we want to make the axios request that will grab our data and save it in the redux store 
using our mutation function -- solution = store what you get back from backend and store in front end as is (entire calendar store) when render the 
grip do a map on the store items that we saved and then render the grid . 

3) Once we have that data in our store, we can access it from Calendar.js and loop over it and based on the values 
in the array decide whether then box should be filled in with the correct color


OR if we don't want to do as much work


Once that's finished
we can work on the feature where if we click on a day that is in the dark purple color (we know it has stuff)
We should make a eventhandler for the onclick for calendar where it will go and grab our entry info (text, etc.)


GRANTED we already have code in the App.js that has already grabbed all of our entries anyways so maybe we just use that 
OR we should delete that axios stuff in App.js and just worry about our future stuff

No matter where we get our data from
we should just
a) iterate over all of our entries and get which days exist and color in those squares
b) once someone clicks on a square if
b1) it is a dark square (has data) we should show what's in there in the text area
b2) it is light (does not have data) it should show an empty text area

NEXT STEPS BELOW******************************************************************************************************************
These are the next steps needed to get the data to render to the screen:

Check data to see if our data that is coming from backend is compared to our local data -- If true render tile components that would pass
in our mood data and text data with props
(That data allow us to render all of our tiles with different colors)


Once the tile colors change - heading in the right direction!
The tile needs to have a toggle functionality to toggle information that is coming in. 

Next pass the data in to Mood and Text 
